# -*- coding: utf-8 -*-
"""FinalProject CS-GY 9223.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FvCvVNblxqYGK-UNQET6Q7Lt1BrzKq7b

Hafeeza Mughal
#Project Milestone 4/21/22
"""

#Hafeeza Mughal
#Project Milestone 4/21/22
!pip install lime shap

import pandas as pd
import numpy as np

from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import MinMaxScaler
from sklearn.neural_network import MLPClassifier

df = pd.read_csv('/content/census.tar.gz', on_bad_lines = 'skip')

df.head()

df.columns

df = df.drop([' 0', ' 0.1',' 0.2', ' Not in universe.1', ' Not in universe or children',' Not in universe.2',
              ' All other',' Not in universe.3', ' Not in universe.4', ' 0.3', 
              ' 0.4', ' 0.5', ' Nonfiler', ' Not in universe.5', ' Not in universe.6',
              ' Other Rel 18+ ever marr not in subfamily', ' Other relative of householder',
              ' 1700.09', ' ?', ' ?.1', ' ?.2', ' Not in universe under 1 year old', ' ?.3', ' 0.6', 
              ' Not in universe.7', ' United-States',' United-States.1', ' United-States.2',
              ' 0.7', ' Not in universe.8', ' 2', ' 0.8', ' 95', ' - 50000.'], 
             axis=1)

df.head()

df.columns

le = LabelEncoder() # label encoder 
df['Income'] = df['census-income.data']

df['Occupation'] = le.fit_transform(df[' Not in universe'])
df['High_School_Grad'] = le.fit_transform(df[' High school graduate'])
df['Martial_Status'] = le.fit_transform(df[' Widowed'])   #first row is divorced
df['White'] = le.fit_transform(df[' White'])               #first row is white
df['Sex'] = le.fit_transform(df[' Female'])               #first row is male
df['Not_In_Labor_Forces'] = le.fit_transform(df[' Not in labor force'])
df['Native_USA'] = le.fit_transform(df[' Native- Born in the United States'])

#need to encode income data

# row = df['census-income.data']
# row['x'].isnull()

# df['census-income.data'].apply(pd.to_numeric, errors='coerce')
# df['census-income.data'].dropna()
# df['census-income.data'].astype('int')

# df['Income']=le.fit_transform(df['census-income.data'])

X = df.drop(['Income'], axis=1)

s = MinMaxScaler()
X[X.columns] = s.fit_transform(X[X.columns])

y = df['Income']

X_train, X_test, y_train, y_test  = train_test_split(X, y, test_size=0.33, random_state=2022)

clf = MLPClassifier(max_iter=100, random_state=2022)
clf.fit(X_train, y_train)